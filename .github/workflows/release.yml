name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Run tests before release
      run: |
        # Test async engine core
        python -c "from rpg_engine import AsyncGameEngine, ServiceContainer, EventBus"
        
        # Run unit tests
        python test_engine.py
        
    - name: Extract version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
    - name: Create release archive
      run: |
        # Create source distribution
        mkdir -p dist/
        
        # Create release archive with all necessary files
        tar -czf dist/rpg-engine-v${{ steps.get_version.outputs.VERSION }}.tar.gz \
          --exclude='.git*' \
          --exclude='__pycache__' \
          --exclude='*.pyc' \
          --exclude='.pytest_cache' \
          --exclude='dist' \
          --exclude='build' \
          .
          
        # Create demo package
        mkdir -p demo-package/
        cp engine_demo.py demo-package/
        cp simple_ui_test.py demo-package/
        cp test_engine.py demo-package/
        cp requirements.txt demo-package/
        cp config.json demo-package/
        cp -r rpg_engine/ demo-package/
        
        tar -czf dist/rpg-engine-demo-v${{ steps.get_version.outputs.VERSION }}.tar.gz \
          -C demo-package .
          
    - name: Generate changelog
      id: changelog
      run: |
        {
          echo "CHANGELOG<<EOF"
          echo "## 🎮 RPG Engine v${{ steps.get_version.outputs.VERSION }}"
          echo ""
          echo "### ✨ Features"
          echo "- Async-first RPG engine architecture"
          echo "- Interactive UI with real-time monitoring"
          echo "- Event-driven design with strong typing"
          echo "- Service container with dependency injection"
          echo "- Cross-thread communication for UI integration"
          echo "- Comprehensive demo applications"
          echo ""
          echo "### 🚀 Demo Applications"
          echo "- \`engine_demo.py\` - Comprehensive interactive demo"
          echo "- \`simple_ui_test.py\` - Simple UI testing"
          echo "- \`test_engine.py\` - Unit tests and verification"
          echo ""
          echo "### 📋 Requirements"
          echo "- Python 3.11 or higher"
          echo "- tkinter (usually included with Python)"
          echo ""
          echo "### 🏃 Quick Start"
          echo "\`\`\`bash"
          echo "# Download and extract the demo package"
          echo "tar -xzf rpg-engine-demo-v${{ steps.get_version.outputs.VERSION }}.tar.gz"
          echo ""
          echo "# Install dependencies"
          echo "pip install -r requirements.txt"
          echo ""
          echo "# Run the comprehensive demo"
          echo "python engine_demo.py"
          echo "\`\`\`"
          echo "EOF"
        } >> $GITHUB_OUTPUT
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: RPG Engine v${{ steps.get_version.outputs.VERSION }}
        body: ${{ steps.changelog.outputs.CHANGELOG }}
        files: |
          dist/rpg-engine-v${{ steps.get_version.outputs.VERSION }}.tar.gz
          dist/rpg-engine-demo-v${{ steps.get_version.outputs.VERSION }}.tar.gz
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
